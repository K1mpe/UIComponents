@using UIComponents.Abstractions.Attributes;
@using UIComponents.Abstractions.Interfaces;
@using UIComponents.Abstractions.Interfaces.ExternalServices;
@using UIComponents.Abstractions.Models;
@using UIComponents.Abstractions.Extensions;
@using UIComponents.Defaults;
@using UIComponents.Models;
@using UIComponents.Models.Models;
@using UIComponents.Models.Models.Actions;
@using UIComponents.Models.Models.Buttons;
@using UIComponents.Models.Models.Card;
@using UIComponents.Models.Models.Dropdown;
@using UIComponents.Models.Models.Icons;
@using UIComponents.Models.Models.Inputs;
@using UIComponents.Models.Models.Texts;
@using UIComponents.Web.Extensions;
@using CDCPortal.DA.UIComponents.Models.Dropdown;

@model UICDropdownHeader

@{
    Model.AddAttribute("class", "dropdown-header");
}

<li>
    <h6 @Html.Raw(Model.GetHtmlAttributes())>
        @if (Model.Icon.HasValue())
        {
            @await Model.Icon.InvokeAsync(Component)
        }
        else
        {
            <span class="icon"></span>
        }
        @L.GetResourceValue(Model.Content)
        </h6>
</li>