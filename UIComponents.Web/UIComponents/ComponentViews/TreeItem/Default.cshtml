@using UIComponents.Abstractions;
@using UIComponents.Abstractions.Attributes;
@using UIComponents.Abstractions.Interfaces;
@using UIComponents.Abstractions.Interfaces.Services;
@using UIComponents.Abstractions.Models;
@using UIComponents.Abstractions.Extensions;
@using UIComponents.Defaults;
@using UIComponents.Models;
@using UIComponents.Models.Models;
@using UIComponents.Models.Models.Actions;
@using UIComponents.Models.Models.Buttons;
@using UIComponents.Models.Models.Card;
@using UIComponents.Models.Models.Dropdown;
@using UIComponents.Models.Models.Icons;
@using UIComponents.Models.Models.Inputs;
@using UIComponents.Models.Models.Texts;
@using UIComponents.Web.Extensions;

﻿

@using UIComponents.Models.Models.Tree;


@inject IUICLanguageService L
@model UICTreeItem
@{
    if (Model.Tooltip != null)
        Model.Li_Attr.Add("title", await L.Translate(Model.Tooltip));
}
{
@if (!string.IsNullOrEmpty(Model.Id))
{
    <text>
        id: '@Html.JsEncode(Model.Id)',
    </text>
}
@if (Model.Text != null)
{
    <text>
        text: '@Html.JsEncode(await L.Translate(Model.Text))',
    </text>
}
@if (Model.Icon != null)
{
    <text>
        icon: '@Html.JsEncode(Model.Icon)',
    </text>
}

@if (Model.State != null)
{
    <text>
        state: {
        opened: @Json.Serialize(Model.State.Opened),
        disabled: @Json.Serialize(Model.State.Disabled),
        selected: @Json.Serialize(Model.State.Selected),
        },
    </text>
}

@if (Model.Children.Any())
{
    <text>
        children: [
        @foreach (var child in Model.Children)
        {
            @await child.InvokeAsync(Component)
        }
        ],
    </text>
}
else if (Model.HasAjaxChildren)
{
    <text>
        children: true,
    </text>
}
else
{
    <text>
        children: [],
    </text>
}

@if (Model.Li_Attr.Any())
{
    <text>
        li_attr: {
        @foreach (var item in Model.Li_Attr)
        {
            <text>
                '@Html.JsEncode(item.Key)' : '@Html.JsEncode(item.Value)',
            </text>
        }
        },
    </text>
}
@if (Model.A_Attr.Any())
{
    <text>
        a_attr: {
        @foreach (var item in Model.A_Attr)
        {
            <text>
                '@Html.JsEncode(item.Key)' : '@Html.JsEncode(item.Value)',
            </text>
        }
        },
    </text>
}

},