@using UIComponents.Abstractions.Attributes;
@using UIComponents.Abstractions.Interfaces;
@using UIComponents.Abstractions.Interfaces.ExternalServices;
@using UIComponents.Abstractions.Models;
@using UIComponents.Abstractions.Extensions;
@using UIComponents.Defaults;
@using UIComponents.Models;
@using UIComponents.Models.Models;
@using UIComponents.Models.Models.Actions;
@using UIComponents.Models.Models.Buttons;
@using UIComponents.Models.Models.Card;
@using UIComponents.Models.Models.Dropdown;
@using UIComponents.Models.Models.Icons;
@using UIComponents.Models.Models.Inputs;
@using UIComponents.Models.Models.Texts;
@using UIComponents.Web.Extensions;


@using UIComponents.Models.Models.Tree;

@model UICTreeLoadAjaxData

//If initial load
let jsTreeNode = {};
jsTreeNode.id = obj.id;

if(jsTreeNode.id === "#"){
    jsTreeNode.id = @Html.JsEncode(Model.InitialId, "'");
    jsTreeNode.initial = true;
}
    

@await Model.Result.InvokeAsync(Component)

if(result === false)
    return callback.call(this, false);

var deserialized = eval(result);
return callback.call(this, deserialized);
