@model UICToggleButton

@{
    string id = Model.GetOrGenerateId();
    string idButtonTrue = Model.ButtonTrue.GetOrGenerateId();
    string idButtonFalse = Model.ButtonFalse.GetOrGenerateId();

}


<div @Html.Raw(Model.GetHtmlAttributes())>
    @await Model.ButtonTrue.InvokeAsync(Component)
    @await Model.ButtonFalse.InvokeAsync(Component)
</div>

<script>
    $(document).ready(function(){
        $('#@id').on('SetValue', function(e, value){
            console.log('setValue');
            if(value == true){
                ViewButtonTrue();
            } else{
                ViewButtonFalse();
            }
        });
        $('#@id').on('GetValue', function(e){
            return $('#@idButtonTrue:visible').length >0;
        })


        var ViewButtonTrue = function(){
            $('#@idButtonTrue').attr('hidden', false);
            $('#@idButtonFalse').attr('hidden',true);
        };
        var ViewButtonFalse = function () {
            $('#@idButtonTrue').attr('hidden', true);
            $('#@idButtonFalse').attr('hidden', false);
        };
    @if (!Model.DisableAutoChange)
    {
        <text>
            $('#@idButtonTrue').click(function () {
                ViewButtonFalse();
            });

            $('#@idButtonFalse').click(function () {
                ViewButtonTrue();
            });
        </text>
    }
    
    @if (Model.Value)
    {
        <text>
            ViewButtonTrue();
        </text>
    }
    else
    {
        <text>
            ViewButtonFalse();
        </text>
    }
    });
</script>