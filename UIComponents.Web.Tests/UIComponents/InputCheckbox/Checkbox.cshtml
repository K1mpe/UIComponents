@using UIComponents.Abstractions.Attributes;
@using UIComponents.Abstractions.Interfaces;
@using UIComponents.Abstractions.Interfaces.ExternalServices;
@using UIComponents.Abstractions.Models;
@using UIComponents.Abstractions.Extensions;
@using UIComponents.Defaults;
@using UIComponents.Models;
@using UIComponents.Models.Models;
@using UIComponents.Models.Models.Actions;
@using UIComponents.Models.Models.Buttons;
@using UIComponents.Models.Models.Dropdown;
@using UIComponents.Models.Models.Icons;
@using UIComponents.Models.Models.Inputs;
@using UIComponents.Models.Models.Texts;
@using UIComponents.Web.Extensions;

@model UICInputCheckbox

@{
    Model.AddAttribute("class", "form-checkbox");

    string id = Model.GetOrGenerateId();
    if (Model.Actions.HasValue())
    {
        Model.Actions.SetIdentifier($"#{id}");
    }
    //Model.AddAttribute("style", $"accent-color: {Model.Color.ToHex()}");
    if (Model.Value)
        Model.AddAttribute("checked", "true");
}

<input type="checkbox" @Html.Raw(Model.GetHtmlAttributes())/>


@await Model.Actions.InvokeAsync(Component)