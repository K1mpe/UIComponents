@using UIComponents.Abstractions;
@using UIComponents.Abstractions.Attributes;
@using UIComponents.Abstractions.Enums
@using UIComponents.Abstractions.Interfaces;
@using UIComponents.Abstractions.Interfaces.Services;
@using UIComponents.Abstractions.Models;
@using UIComponents.Abstractions.Extensions;
@using UIComponents.Defaults;
@using UIComponents.Models;
@using UIComponents.Models.Models;
@using UIComponents.Models.Models.Actions;
@using UIComponents.Models.Models.Buttons;
@using UIComponents.Models.Models.Card;
@using UIComponents.Models.Models.Dropdown;
@using UIComponents.Models.Models.Icons;
@using UIComponents.Models.Models.Inputs;
@using UIComponents.Models.Models.Tables;
@using UIComponents.Models.Models.Tables.TableColumns
@using UIComponents.Models.Models.Texts;
@using UIComponents.Web.Extensions;

@model UICTableColumnPartial

{
    type: @Html.JsEncode(Model.Type, "'"),
    identifier: @Html.JsEncode(Model.Identifier, "'"),
    loadContent: async(value, item) =>{
        @await Model.GetPost.InvokeAsync(Component)
        return @Html.JsEncode(Model.GetPost.ResultName);
    },
    checkBeforeCellRender: function(item, value){
        @await Model.Validation.InvokeAsync(Component)
        return true;
    },
    multiple: @Json.Serialize(Model.Multiple),
    css: @Html.JsEncode(UICTableColumn.VisibilityClass(Model.ColumnVisibility), "'"),
},