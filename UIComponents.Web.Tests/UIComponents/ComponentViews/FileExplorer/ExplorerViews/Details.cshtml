@using UIComponents.Abstractions;
@using UIComponents.Abstractions.Attributes;
@using UIComponents.Abstractions.Enums
@using UIComponents.Abstractions.Interfaces;
@using UIComponents.Abstractions.Interfaces.Services;
@using UIComponents.Abstractions.Models;
@using UIComponents.Abstractions.Extensions;
@using UIComponents.Abstractions.Models.FileExplorer
@using UIComponents.Abstractions.Varia
@using UIComponents.Defaults;
@using UIComponents.Models;
@using UIComponents.Models.Models;
@using UIComponents.Models.Models.Actions;
@using UIComponents.Models.Models.Buttons;
@using UIComponents.Models.Models.Card;
@using UIComponents.Models.Models.Dropdown;
@using UIComponents.Models.Models.Icons;
@using UIComponents.Models.Models.Inputs;
@using UIComponents.Models.Models.Texts;
@using UIComponents.Web.Extensions;

@inject IUICLanguageService L

@model GetFilesForDirectoryResultModel

<table class="table @(Model.CanCreateInDirectory?"can-create":"")">
    <thead>
        <tr>
            <th name="Icon">@await Html.TranslateHtml(L, TranslatableSaver.Save("FileExplorer.Icon"))</th>
            <th name="FileName">@await Html.TranslateHtml(L, TranslatableSaver.Save("FileExplorer.FileName"))</th>
            <th name="FileType">@await Html.TranslateHtml(L, TranslatableSaver.Save("FileExplorer.FileType"))</th>
            <th name="LastModified">@await Html.TranslateHtml(L, TranslatableSaver.Save("FileExplorer.LastModified"))</th>
            <th name="Size">@await Html.TranslateHtml(L, TranslatableSaver.Save("FileExplorer.Size"))</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var item in Model.Files)
        {
            item.Data["data-AbsolutePath"] = item.AbsolutePathReference;
            item.Data["data-RelativePath"] = item.RelativePath;
            item.Data["data-Extension"] = item.Extension;
            if (!item.Data.ContainsKey("class"))
                item.Data["class"] = string.Empty;
            item.Data["class"] += " explorer-item";
            if (item.IsFolder)
                item.Data["class"] += " explorer-folder";
            if (!item.CanOpen)
                item.Data["class"] += " cannot-open";
            if (item.CanMove)
                item.Data["class"] += " can-move";
            if (item.CanDelete)
                item.Data["class"] += " can-delete";
            if (item.CanRename)
                item.Data["class"] += " can-rename";

            <tr @Html.GetAttributesFromDictionary(item.Data)>
                <td>@Html.Raw(item.Icon)</td>
                <td>@Html.Raw(item.FileName)</td>
                <td>@Html.Raw(item.FileType??item.Extension)</td>
                <td>@Html.Raw(item.LastModified.ToString())</td>
                <td>@Html.Raw(item.Size)</td>
            </tr>
        }
    </tbody>
</table>
