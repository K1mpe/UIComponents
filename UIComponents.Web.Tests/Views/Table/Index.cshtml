@using UIComponents.Models.Models.Tables.TableColumns
@{

    var table = new UICTable<TestModel>(new UICActionGet("testmodel", "LoadData"))
    {   
        EnableInsert = true,
        EnableUpdate = true,
        EnableDelete = true,
        SaveOnBlur = true,

        Sorter = new(nameof(TestModel.Number), SortOrder.Desc),
    };
    // var testButton = new UICButton()
    // {
    //     PrependButtonIcon = new("fas fa-user"),
    //     OnClick= new UICCustom("alert(`${item.TestString} is clicked`);")
    // };
    // testButton.OnClick = new UICActionNavigate("/table/details/?teststring=${item.TestString}");
    // table.AddColumn(new UICTableColumnButton(testButton));
    table.AddColumn(new UICTableColumnPartial(new UICActionGet("/table/details"))
    {
        Identifier = "TestString",
        Multiple = true,
        ColumnVisibility = UICTableColumnVisibility.VisibleSmallerThenXl
    });
    table.AddColumn(x => x.Description, config =>
    {
        config.ColumnVisibility = UICTableColumnVisibility.HideSmallerThenLg;
    });
    table.AddColumn(x => x.Number, config =>
    {
        config.DefaultFilter = 10;
        config.Icon = new("fas fa-dollar");
        config.IconVisibility = UICTableColumnVisibility.VisibleSmallerThenLg;
        config.TextVisibility = UICTableColumnVisibility.HideSmallerThenLg;
    });
    table.AddAllUndefinedColumns().RemoveColumns("SubModel, RecurringDate, IntList,objectlist");
    table.AddControlColumn(out var controlColumn);
}
<uic-custom uic="controlColumn.BeforeButtons">
    return '<i class="fas fa-user"></i>';
</uic-custom>
<uic-custom uic="table.GetColumn(x=>x.Decimal).ItemTemplate">
    return '€'+value;
</uic-custom>




@await table.InvokeAsync(Component)

