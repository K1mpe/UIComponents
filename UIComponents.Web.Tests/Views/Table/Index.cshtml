@using UIComponents.Models.Models.Tables.TableColumns
@{
    var data = new List<TestModel>()
    {
        new(){TestString = "Item1", DateTime= DateTime.Now, Decimal = 4, Color= "#ff0000"},
        new(){TestString = "Item2", Checkbox = true, ThreeStateBool = true},
        new(){TestString = "Item3", TimeSpan = TimeSpan.FromHours(2).Add(TimeSpan.FromMinutes(14))}
    };
    var table = new UICTable<TestModel>(data)
    {   
        EnableInsert = true,
        EnableUpdate = true,
        Resizable = true,
    };
    var testButton = new UICButton()
    {
        PrependButtonIcon = new("fas fa-user"),
        OnClick= new UICCustom("alert(`${item.TestString} is clicked`);")
    };
    testButton.OnClick = new UICActionNavigate("/table/details/?teststring=${item.TestString}");
    //table.AddColumn(new UICTableColumnButton(testButton));
    table.AddColumn(new UICTableColumnPartial(new UICActionGet("/table/details"))
    {
        Identifier = "TestString",
        Multiple = true
    });
    table.AddColumn(x => x.Description, config =>
    {
        config.ColumnVisibility = UICTableColumnVisibility.HideSmallerThenLg;
    });
    table.AddColumn(x => x.Number, config =>
    {
        config.Icon = new("fas fa-dollar");
        config.IconVisibility = UICTableColumnVisibility.VisibleSmallerThenLg;
        config.TextVisibility = UICTableColumnVisibility.HideSmallerThenLg;
    });
    table.AddAllUndefinedColumns().RemoveColumns("SubModel, RecurringDate, IntList,objectlist");

}

<uic-custom uic="table.GetColumn(x=>x.Decimal).ItemTemplate">
    return value-1;
</uic-custom>




@await table.InvokeAsync(Component)

