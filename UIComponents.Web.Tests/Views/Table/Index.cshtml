@{
    var data = new List<TestModel>()
    {
        new(){TestString = "Item1", DateTime= DateTime.Now, Decimal = 4},
        new(){TestString = "Item2", Checkbox = true, ThreeStateBool = true},
        new(){TestString = "Item3", TimeSpan = TimeSpan.FromHours(2).Add(TimeSpan.FromMinutes(14))}
    };
    var table = new UICTable<TestModel>(data)
    {   
        EnableInsert = true,
        EnableUpdate = true
    };
    table.AddColumn(x => x.TestString, teststring =>
    {
        // teststring.CellRenderer = new UICCustom(@<text>
        //     console.log(this, value, item);
        //     let cell= $('<td>', {class: 'text-bold'}).text(value);
        //     return cell;
        //     </text>);
        
    })
        .AddAllUndefinedColumns(false,false);
    table.Render = true;
}

<uic-custom uic="table.GetColumn(x=>x.TestString).HeaderTemplate">
    <h1>Test</h1>

    blubke

    <i class="fas fa-user"></i>
</uic-custom>
<uic-custom uic="table.GetColumn(x=>x.Decimal).ItemTemplate">
    return value-1;
</uic-custom>

<uic-custom uic=table.OnUpdateItem>
    console.log('update-item', args);
</uic-custom>



@await table.InvokeAsync(Component)

