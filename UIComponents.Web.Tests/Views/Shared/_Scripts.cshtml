
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/lib/admin-lte/dist/js/adminlte.min.js"></script>
<script src="~/lib/sweetalert2/sweetalert2.min.js"></script>
<script src="~/lib/toastr/toastr.min.js"></script>
<script src="~/lib/jquery-ui/jquery-ui.min.js"></script>
@*<script src="~/lib/jsgrid/dist/jsgrid.min.js"></script>
<script src="~/lib/jsgrid/dist/i18n/jsgrid-nl.js"></script>
<script src="~/lib/jsgrid/custom-fields.js"></script>*@
<script src="~/lib/select2/js/select2.full.min.js"></script>
<script src="~/uic/js/uic.js" asp-append-version="true"></script>
<script src="~/lib/coloris/dist/umd/coloris.min.js"></script>
<script src="~/lib/moment/moment-with-locales.min.js"></script>
<script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
<script src="~/lib/jquery-loading-overlay/loadingoverlay.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>

<script>
    $(document).ready(() => {

        const themeColors = { };
        const otherColors = { };


        const themeColorArray = [];
        const otherColorArray = [];
        // Coloris
        Coloris({
            el: '.coloris',
            theme: 'pill',
            themeMode: 'auto',
            swatches: themeColorArray,
            onChange: (color, input) => { console.log('col', color); $(input).parents('.form-group').find('.input-group-text *').css('color', color); },

            focusInput: false,
            selectInput: false,
            alpha: false,
        });
        Coloris.setInstance('.allow-alpha', {
            alpha: true,
        });
        Coloris.setInstance('.force-alpha', {
            alpha: true, forceAlpha: true,
        });
        Coloris.setInstance('.no-alpha', {
            alpha: false,
        });
        Coloris.setInstance('.no-swatches', {
            swatches: [],
        });
        Coloris.setInstance('.only-swatches', {
            swatchesOnly: true, theme: 'default',
        });

        $(document).on('input', '[data-coloris], .coloris', function () {
            var value = $(this).val();
            var group = $(this).parents('.input-group');

            if (value in themeColors) {
                console.log('set', value)
                Coloris.setColor(themeColors[value], this);
            }
            if (group.length && isColor(value)) {
                console.log('css', value)
                group.find('.input-group-text *').css('color', value);
            }

            console.log('end', value)
        });
        $(document).on('click', '[data-coloris]:not([data-coloris=""])', function () {
            var config = $(this).data('coloris');
            if (config) {
                $(this).replaceClass('coloris', 'instance');
                $(this).one('close', function () {
                    Coloris.removeInstance('.instance');
                    $(this).removeClass('instance');
                });

                // console.log(this, config);
                Coloris.setInstance('.instance', config);
            }
        });
    });
   
</script>