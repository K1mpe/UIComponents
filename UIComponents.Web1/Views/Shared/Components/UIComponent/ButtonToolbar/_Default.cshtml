@using CDCPortal.DA.UIComponents.Enums;
@model UICButtonToolbar

@{
    string buttonDistance = "d-flex ";

    Model.AssignCollectionForChildren();
    Model.AddAttribute("class", "btn-toolbar");
    Model.AddAttribute("role", "toolbar");
    switch (Model.Distance)
    {
        case ButtonDistance.None:
            buttonDistance += "btn-group";
            break;
        case ButtonDistance.Short:
            buttonDistance += "gap-1";
            break;
        case ButtonDistance.Medium:
            buttonDistance += "gap-3";
            break;
        case ButtonDistance.Long:
            buttonDistance += "gap-5";
            break;
    }
}
@if(Model.Left.Any() || Model.Center.Any() || Model.Right.Any())
{
    <div @Html.Raw(Model.GetHtmlAttributes())>
        @if (Model.Left.Any())
        {
            <div class="btn-toolbar-left mr-auto @buttonDistance">
                @foreach (var button in Model.Left)
                {
                    @await button.InvokeAsync(Component)
                }
            </div>
        }

        @if (Model.Center.Any())
        {
            <div class="btn-toolbar-center  @buttonDistance">
                @foreach (var button in Model.Center)
                {
                    @await button.InvokeAsync(Component)
                }
            </div>
        }

        @if (Model.Right.Any())
        {
            <div class="btn-toolbar-right ml-auto  @buttonDistance">
                @foreach (var button in Model.Right)
                {
                    @await button.InvokeAsync(Component)
                }
            </div>
        }
    </div>
}

@await Model.RenderStylesAndScripts(Component)
